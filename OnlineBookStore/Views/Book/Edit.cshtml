@model OnlineBookStore.Models.Entities.BOOK

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/BackendLayout.cshtml";
}

<h2>Sửa thông tin</h2>


@using (Html.BeginForm("Edit", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="row justify-content-center">
    <div class="col-lg-5">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BOOKID)
        @Html.HiddenFor(model => model.PIC1)
        @Html.HiddenFor(model => model.PIC2)
        @Html.HiddenFor(model => model.PIC3)
        @Html.HiddenFor(model => model.PIC4)

        <div class="form-group">
            @Html.LabelFor(model => model.BOOKNAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BOOKNAME, new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.BOOKNAME, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="">
            @Html.LabelFor(model => model.DESCRIPTIONS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DESCRIPTIONS, new
           {
               @class = "text-danger",
               cols = "50",
               rows = "10"
           })
                @Html.ValidationMessageFor(model => model.DESCRIPTIONS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TYPEID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("typeid", null, new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.TYPEID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PUBLISHID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("publishid", null, new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.PUBLISHID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AMOUNT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AMOUNT, new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.AMOUNT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AUTHORID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("authorid", null, new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.AUTHORID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PIC1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Url.Content(Model.PIC1?? "~/Image/add.png")" alt="Image not found" style="width:290px" id="preImage" />
                <input type="file" name="Image1" id="Image1" onchange="ShowImagePreview(this, document.getElementById('preImage'))" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PIC2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Url.Content(Model.PIC2?? "~/Image/add.png")" alt="Image not found" style="width:290px" id="preImage2" />
                <input type="file" name="Image2" id="Image2" onchange="ShowImagePreview2(this, document.getElementById('preImage2'))" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PIC3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Url.Content(Model.PIC3?? "~/Image/add.png")" alt="Image not found" style="width:290px" id="preImage3" />
                <input type="file" name="Image3" id="Image3" onchange="ShowImagePreview3(this, document.getElementById('preImage3'))" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PIC4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="@Url.Content(Model.PIC4?? "~/Image/add.png")" alt="Image not found" style="width:290px" id="preImage4" />
                <input type="file" name="Image4" id="Image4" onchange="ShowImagePreview4(this, document.getElementById('preImage4'))" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PRICE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PRICE, new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.PRICE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Quay lại trang danh sách", "Index")
</div>

<script>
    function ShowImagePreview(Uploader, preImage) {
        if (Uploader.files && Uploader.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(preImage).attr('src', e.target.result);
            }
            reader.readAsDataURL(Uploader.files[0]);
        }
    }

    function ShowImagePreview2(Uploader2, preImage2) {
        if (Uploader2.files && Uploader2.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(preImage2).attr('src', e.target.result);
            }
            reader.readAsDataURL(Uploader2.files[0]);
        }
    }

    function ShowImagePreview3(Uploader3, preImage3) {
        if (Uploader3.files && Uploader3.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(preImage3).attr('src', e.target.result);
            }
            reader.readAsDataURL(Uploader3.files[0]);
        }
    }

    function ShowImagePreview4(Uploader4, preImage4) {
        if (Uploader4.files && Uploader4.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(preImage4).attr('src', e.target.result);
            }
            reader.readAsDataURL(Uploader4.files[0]);
        }
    }



    
</script>

